/**
 * Creates a visual theme for any passed in 'ui' config for buttons.
 */
@mixin cmu-button-ui(
    $patchonly: false,
    $ui: null,
    $scale: null,

    // background colors
    $background-color: null,
    $background-color-over: null,
    $background-color-pressed: null,
    $background-color-disabled: $button-default-background-color-disabled,

    // gradient colors
    $background-gradient: null,
    $background-gradient-over: null,
    $background-gradient-pressed: null,
    $background-gradient-disabled: $button-default-background-color-disabled,

    // border colors
    $border-color: null,
    $border-color-over: null,
    $border-color-pressed: null,
    $border-color-disabled: $button-default-border-color-disabled,

    // inner border
    $inner-border-width: null,
    $inner-border-color: null,
    $inner-border-color-over: null,
    $inner-border-color-pressed: null,
    $inner-border-color-focus: null,
    $inner-border-color-focus-over: null,
    $inner-border-color-focus-pressed: null,
    $inner-border-color-disabled: $button-default-inner-border-color-disabled,

    // text color
    $color: null,
    $color-over: null,
    $color-pressed: null,
    $color-disabled: $button-default-color-disabled,

    // arrow color
    $arrow-glyph-color: null,
    $arrow-glyph-color-over: null,
    $arrow-glyph-color-pressed: null,
    $arrow-glyph-color-disabled: $button-default-arrow-glyph-color-disabled,

    // glyph color
    $glyph-color: null,
    $glyph-color-over: null,
    $glyph-color-pressed: null,
    $glyph-color-disabled: $button-default-glyph-color-disabled,

    // opacity settings for disabled button
    $opacity-disabled: $button-opacity-disabled,
    $inner-opacity-disabled: $button-inner-opacity-disabled,

    // text styling
    $text-transform: $cmu-button-text-transform,
    $letter-spacing: $cmu-button-letter-spacing,

    // padding
    $padding: null,
    $text-padding: null,

    $line-height: null,
    $font-family: null,
    $border-width: null,
    $border-radius: null

) {


    // make sure background colors are set
    @if $background-color == null {
        @warn 'cmu-mixin-ui needs a $background-color, defaulting to $button-default-background-color for $ui: ' + $ui;
        $background-color: $button-default-background-color;
    }

    @if $background-color-over == null {
        $background-color-over: $background-color;
    }

    @if $background-color-pressed == null {
        $background-color-pressed: $background-color-over;
    }

    // make sure border colors are set
    @if $border-color == null {
        $border-color: $background-color; // default to background color if not set
    }

    @if $border-color-over == null {
        $border-color-over: $border-color;
    }

    @if $border-color-pressed == null {
        $border-color-pressed: $border-color-over;
    }

    // make sure inner border colors are set
    @if $inner-border-color == null {
        $inner-border-color: $background-color; // default to background color if not set
    }

    @if $inner-border-color-over == null {
        $inner-border-color-over: $inner-border-color;
    }

    @if $inner-border-color-pressed == null {
        $inner-border-color-pressed: $inner-border-color-over;
    }

    @if $inner-border-color-focus == null {
        $inner-border-color-focus: $inner-border-color-pressed;
    }

    @if $inner-border-color-focus-over == null {
        $inner-border-color-focus-over: $inner-border-color-focus;
    }

    @if $inner-border-color-focus-pressed == null {
        $inner-border-color-focus-pressed: $inner-border-color-focus-over;
    }

    // make sure text colors are set, default to a contrasting color if needed
    @if $color == null and $background-color != transparent {
        $color: color-contrast($background-color);
    }

    @if $color-over == null and $background-color-over != transparent {
        $color-over: color-contrast($background-color-over);
    }

    @if $color-pressed == null and $background-color-pressed != transparent {
        $color-pressed: color-contrast($background-color-pressed);
    }

    // make sure arrow glyph colors are set, default to a contrasting color if needed
    @if $arrow-glyph-color == null and $background-color != transparent {
        $glyph-color: color-contrast($background-color);
    }

    @if $arrow-glyph-color-over == null and $background-color-over != transparent {
        $arrow-glyph-color-over: color-contrast($background-color-over);
    }

    @if $arrow-glyph-color-pressed == null and $background-color-pressed != transparent {
        $arrow-glyph-color-presed: color-contrast($background-color-pressed);
    }

    // make sure glyph colors are set, default to a contrasting color if needed
    @if $glyph-color == null and $background-color != transparent {
        $glyph-color: color-contrast($background-color);
    }

    @if $glyph-color-over == null and $background-color-over != transparent {
        $glyph-color-over: color-contrast($background-color-over);
    }

    @if $glyph-color-pressed == null and $background-color-pressed != transparent {
        $glyph-color-presed: color-contrast($background-color-pressed);
    }



    // Run the correct scale mixin

    @if $scale == 'small' {
        @if is-null($line-height) {
            $line-height: $button-small-line-height;
        }
        @if is-null($border-width) {
            $border-width: $button-small-border-width;
        }
        @if is-null($border-radius) {
            $border-radius: $button-small-border-radius;
        }
        @if is-null($padding) {
            $padding: $button-small-padding;
        }
        @if is-null($text-padding) {
            $text-padding: $button-small-text-padding;
        }
        @if $patchonly == false {
            @include extjs-button-small-ui(
                $ui: $ui,

                $background-color: $background-color,
                $background-color-over: $background-color-over,
                $background-color-pressed: $background-color-pressed,
                $background-color-disabled: $background-color-disabled,

                $background-gradient: $background-gradient,
                $background-gradient-over: $background-gradient-over,
                $background-gradient-pressed: $background-gradient-pressed,
                $background-gradient-disabled: $background-gradient-disabled,

                $border-color: $border-color,
                $border-color-over: $border-color-over,
                $border-color-pressed: $border-color-pressed,
                $border-color-disabled: $border-color-disabled,

                $inner-border-width: $inner-border-width,
                $inner-border-color: $inner-border-color,
                $inner-border-color-over: $inner-border-color-over,
                $inner-border-color-pressed: $inner-border-color-pressed,
                $inner-border-color-focus: $inner-border-color-focus,
                $inner-border-color-focus-over: $inner-border-color-focus-over,
                $inner-border-color-focus-pressed: $inner-border-color-focus-pressed,
                $inner-border-color-disabled: $inner-border-color-disabled,

                $color: $color,
                $color-over: $color-over,
                $color-pressed: $color-pressed,
                $color-disabled: $color-disabled,

                $arrow-glyph-color: $arrow-glyph-color,
                //$arrow-glyph-color-over: $arrow-glyph-color-over,
                //$arrow-glyph-color-pressed: $arrow-glyph-color-pressed,
                //$arrow-glyph-color-disabled: $arrow-glyph-color-disabled,
                $split-line-color: $arrow-glyph-color,

                $glyph-color: $glyph-color,
                //$glyph-color-over: $glyph-color-over,
                //$glyph-color-pressed: $glyph-color-pressed,
                //$glyph-color-disabled: $glyph-color-disabled,

                $padding: $padding,
                $text-padding: $text-padding,

                $opacity-disabled: $opacity-disabled,
                $inner-opacity-disabled:  $inner-opacity-disabled,
                $line-height: $line-height,
                $font-family: $font-family,
                $border-width: $border-width,
                $border-radius: $border-radius
            );
        }
        
    }

    @if $scale == 'medium' {
        @if is-null($line-height) {
            $line-height: $button-medium-line-height;
        }
        @if is-null($border-width) {
            $border-width: $button-medium-border-width;
        }
        @if is-null($border-radius) {
            $border-radius: $button-medium-border-radius;
        }
        @if is-null($padding) {
            $padding: $button-medium-padding;
        }
        @if is-null($text-padding) {
            $text-padding: $button-medium-text-padding;
        }
        @if $patchonly == false {
            @include extjs-button-medium-ui(
                $ui: $ui,

                $background-color: $background-color,
                $background-color-over: $background-color-over,
                $background-color-pressed: $background-color-pressed,
                $background-color-disabled: $background-color-disabled,
                $background-gradient: $background-gradient,

                $border-color: $border-color,
                $border-color-over: $border-color-over,
                $border-color-pressed: $border-color-pressed,
                $border-color-disabled: $border-color-disabled,

                $inner-border-width: $inner-border-width,
                $inner-border-color: $inner-border-color,
                $inner-border-color-over: $inner-border-color-over,
                $inner-border-color-pressed: $inner-border-color-pressed,
                $inner-border-color-focus: $inner-border-color-focus,
                $inner-border-color-focus-over: $inner-border-color-focus-over,
                $inner-border-color-focus-pressed: $inner-border-color-focus-pressed,
                $inner-border-color-disabled: $inner-border-color-disabled,

                $color: $color,
                $color-over: $color-over,
                $color-pressed: $color-pressed,
                $color-disabled: $color-disabled,

                $arrow-glyph-color: $arrow-glyph-color,
                //$arrow-glyph-color-over: $arrow-glyph-color-over,
                //$arrow-glyph-color-pressed: $arrow-glyph-color-pressed,
                //$arrow-glyph-color-disabled: $arrow-glyph-color-disabled,
                $split-line-color: $arrow-glyph-color,

                $glyph-color: $glyph-color,
                //$glyph-color-over: $glyph-color-over,
                //$glyph-color-pressed: $glyph-color-pressed,
                //$glyph-color-disabled: $glyph-color-disabled,

                $padding: $padding,
                $text-padding: $text-padding,

                $opacity-disabled: $opacity-disabled,
                $inner-opacity-disabled:  $inner-opacity-disabled,
                $line-height: $line-height,
                $font-family: $font-family,
                $border-width: $border-width,
                $border-radius: $border-radius
            );
        }
    }

    @if $scale == 'large' {
        @if is-null($line-height) {
            $line-height: $button-large-line-height;
        }
        @if is-null($border-width) {
            $border-width: $button-large-border-width;
        }
        @if is-null($border-radius) {
            $border-radius: $button-large-border-radius;
        }
        @if is-null($padding) {
            $padding: $button-large-padding;
        }
        @if is-null($text-padding) {
            $text-padding: $button-large-text-padding;
        }
        @if $patchonly == false {
            @include extjs-button-large-ui(
                $ui: $ui,

                $background-color: $background-color,
                $background-color-over: $background-color-over,
                $background-color-pressed: $background-color-pressed,
                $background-color-disabled: $background-color-disabled,
                $background-gradient: $background-gradient,

                $border-color: $border-color,
                $border-color-over: $border-color-over,
                $border-color-pressed: $border-color-pressed,
                $border-color-disabled: $border-color-disabled,

                $inner-border-width: $inner-border-width,
                $inner-border-color: $inner-border-color,
                $inner-border-color-over: $inner-border-color-over,
                $inner-border-color-pressed: $inner-border-color-pressed,
                $inner-border-color-focus: $inner-border-color-focus,
                $inner-border-color-focus-over: $inner-border-color-focus-over,
                $inner-border-color-focus-pressed: $inner-border-color-focus-pressed,
                $inner-border-color-disabled: $inner-border-color-disabled,

                $color: $color,
                $color-over: $color-over,
                $color-pressed: $color-pressed,
                $color-disabled: $color-disabled,

                $arrow-glyph-color: $arrow-glyph-color,
                //$arrow-glyph-color-over: $arrow-glyph-color-over,
                //$arrow-glyph-color-pressed: $arrow-glyph-color-pressed,
                //$arrow-glyph-color-disabled: $arrow-glyph-color-disabled,
                $split-line-color: $arrow-glyph-color,

                $glyph-color: $glyph-color,
                //$glyph-color-over: $glyph-color-over,
                //$glyph-color-pressed: $glyph-color-pressed,
                //$glyph-color-disabled: $glyph-color-disabled,

                $padding: $padding,
                $text-padding: $text-padding,

                $opacity-disabled: $opacity-disabled,
                $inner-opacity-disabled:  $inner-opacity-disabled,
                $line-height: $line-height,
                $font-family: $font-family,
                $border-width: $border-width,
                $border-radius: $border-radius
            );
        }
    }


    // first, make sure ui is changed to ui-scale
    $ui: $ui + '-' + $scale;


    // Add support for a disabled color for the arrow glyph
    .#{$prefix}btn.#{$prefix}btn-disabled.#{$prefix}btn-#{$ui} {
        .#{$prefix}btn-wrap-#{$ui} {
            &.#{$prefix}btn-arrow-right:after {
                @if $arrow-glyph-color-disabled != $arrow-glyph-color {
                    color: $arrow-glyph-color-disabled;
                }
                @if $arrow-glyph-opacity-disabled != 1 {
                    @include opacity($arrow-glyph-opacity-disabled);
                }
            }
            &.#{$prefix}btn-arrow-bottom:after {
                @if $arrow-glyph-color-disabled != $arrow-glyph-color {
                    color: $arrow-glyph-color-disabled;
                }
                @if $arrow-glyph-opacity-disabled != 1 {
                    @include opacity($arrow-glyph-opacity-disabled);
                }
            }
        }
    }

    // Add support for pressed glyph color on buttons and active menus
    .#{$prefix}btn.#{$prefix}btn-menu-active.#{$prefix}btn-#{$ui},
    .#{$prefix}btn.#{$prefix}btn-pressed.#{$prefix}btn-#{$ui} {
        // glyph
        .#{$prefix}btn-icon-el-#{$ui} {
            // add pressed glyph color
            @if $glyph-color-pressed != $glyph-color {
                color: $glyph-color-pressed;
            }
        }
    }

    // Add support for over glyph color on buttons
    .#{$prefix}btn.#{$prefix}btn-over.#{$prefix}btn-#{$ui} {
        // glyph
        .#{$prefix}btn-icon-el-#{$ui} {
            // add pressed glyph color
            @if $glyph-color-over != $glyph-color {
                color: $glyph-color-over;
            }
        }
    }

    // Add support for text-transform and letter-spacing
    .#{$prefix}btn-#{$ui} {
        .#{$prefix}btn-inner {
            text-transform: $text-transform;
            letter-spacing: $letter-spacing;
        }
    }
}

// import the button UIs
// @import 'Button_approved';
// @import 'Button_default';
// @import 'Button_error';
// @import 'Button_filterpanel';
// @import 'Button_headertool';
// @import 'Button_link';
// @import 'Button_primary';
// @import 'Button_secondary';
// @import 'Button_warning';
